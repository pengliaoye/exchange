<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<debug/>
	<http auto-config='true'>
		<intercept-url pattern="/**" access="ROLE_USER" />	
	</http>	

	<beans:import
		resource="classpath*:/org/owasp/esapi/contrib/spring/authenticator/esapi-spring-security-context.xml" />

	<beans:bean id="authenticationProvider"
		class="com.dm.exchange.authenticator.MyAuthenticator" scope="singleton">
		<beans:property name="authenticationStrategy">
			<beans:bean class="com.dm.exchange.authenticator.MyAuthenticationStrategy">
				<beans:property name="queryRunner" ref="queryRunner" />
				<beans:property name="userDetailsService" ref="userDetailsService" />
				<beans:property name="passwordEncoder">
					<beans:bean class="com.dm.exchange.authenticator.MyPasswordEncoder"/>
				</beans:property>
				<beans:property name="saltSource">
					<beans:bean class="org.springframework.security.authentication.dao.ReflectionSaltSource">
						<beans:property name="userPropertyToUse" value="username"/>
					</beans:bean>
				</beans:property>
			</beans:bean>
		</beans:property>
		<beans:property name="authoritiesPopulator">
			<beans:bean class="com.dm.exchange.authenticator.MyAuthoritiesPopulator" />
		</beans:property>
		<beans:property name="userDetailsService" ref="userDetailsService" />
	</beans:bean>
	<beans:bean id="userDetailsService"
		class="com.dm.exchange.authenticator.MyUserDetailsService">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="enableGroups" value="true"/>
		<beans:property name="usersByUsernameQuery">
			<beans:value>
				select id,accountname,password,expirationdate,failedlogincount,lasthostaddress,
				lastfailedlogintime,lastlogintime,lastpasswordchangetime,screenname,enabled,locked
				from users 
				where accountname = ?
			</beans:value>
		</beans:property>
		<beans:property name="authoritiesByUsernameQuery">
			<beans:value>
				select u.accountname, a.authority
				from users u, users_authorities ua,authorities a
				where u.id = ua.user_id and ua.authority_id = a.id and u.accountname = ?
			</beans:value>
		</beans:property>
		<beans:property name="groupAuthoritiesByUsernameQuery">
			<beans:value>
				select u.accountname, r.id, r.role_name
				from users u, users_roles ur, roles r
				where u.id = ur.user_id and ur.role_id = r.id
				and u.accountname = ?
			</beans:value>
		</beans:property>
	</beans:bean>

</beans:beans>